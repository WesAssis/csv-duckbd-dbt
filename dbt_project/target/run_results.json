{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.11", "generated_at": "2025-09-05T01:12:02.070505Z", "invocation_id": "397f0a48-de5c-4404-bc4b-a0728f5a8de7", "invocation_started_at": "2025-09-05T01:12:01.051129Z", "env": {}}, "results": [{"status": "pass", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:01.834800Z", "completed_at": "2025-09-05T01:12:01.846061Z"}, {"name": "execute", "started_at": "2025-09-05T01:12:01.846373Z", "completed_at": "2025-09-05T01:12:01.867477Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03445839881896973, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_project.accepted_values_car_mileage_segments_mileage_segment__Baixa_KM__M_dia_KM__Alta_KM.d7936d5f43", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        mileage_segment as value_field,\n        count(*) as n_records\n\n    from \"database\".\"main\".\"car_mileage_segments\"\n    group by mileage_segment\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Baixa KM','M\u00e9dia KM','Alta KM'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:01.870610Z", "completed_at": "2025-09-05T01:12:01.874440Z"}, {"name": "execute", "started_at": "2025-09-05T01:12:01.874748Z", "completed_at": "2025-09-05T01:12:01.886050Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017001628875732422, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_project.accepted_values_stg_cars_fuel_type__Petrol__Diesel__Hybrid.996914f1e6", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        fuel_type as value_field,\n        count(*) as n_records\n\n    from \"database\".\"main\".\"stg_cars\"\n    group by fuel_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Petrol','Diesel','Hybrid'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:01.888920Z", "completed_at": "2025-09-05T01:12:01.900886Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04258584976196289, "adapter_response": {}, "message": "Compilation Error in test dbt_expectations_expect_column_values_to_be_between_stg_cars_car_age_years__100__0 (models\\silver\\stg_cars.yml)\n  'dbt_expectations' is undefined. This can happen when calling a macro that does not exist. Check for typos and/or install package dependencies with \"dbt deps\".", "failures": null, "unique_id": "test.dbt_project.dbt_expectations_expect_column_values_to_be_between_stg_cars_car_age_years__100__0.bd9895dbe2", "compiled": false, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:01.934036Z", "completed_at": "2025-09-05T01:12:01.936675Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004638671875, "adapter_response": {}, "message": "Compilation Error in test dbt_expectations_expect_column_values_to_be_between_stg_cars_price_eur__0__price_eur_0 (models\\silver\\stg_cars.yml)\n  'dbt_expectations' is undefined. This can happen when calling a macro that does not exist. Check for typos and/or install package dependencies with \"dbt deps\".", "failures": null, "unique_id": "test.dbt_project.dbt_expectations_expect_column_values_to_be_between_stg_cars_price_eur__0__price_eur_0.4cbd4ef617", "compiled": false, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:01.940107Z", "completed_at": "2025-09-05T01:12:01.944721Z"}, {"name": "execute", "started_at": "2025-09-05T01:12:01.945010Z", "completed_at": "2025-09-05T01:12:01.949889Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011345863342285156, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_project.not_null_avg_price_by_manufacturer_year_average_price_eur.27b1d1e644", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect average_price_eur\nfrom \"database\".\"main\".\"avg_price_by_manufacturer_year\"\nwhere average_price_eur is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:01.952773Z", "completed_at": "2025-09-05T01:12:01.955571Z"}, {"name": "execute", "started_at": "2025-09-05T01:12:01.955863Z", "completed_at": "2025-09-05T01:12:01.962079Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010778188705444336, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_project.not_null_avg_price_by_manufacturer_year_manufacturer.85d886093a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect manufacturer\nfrom \"database\".\"main\".\"avg_price_by_manufacturer_year\"\nwhere manufacturer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:01.965336Z", "completed_at": "2025-09-05T01:12:01.968157Z"}, {"name": "execute", "started_at": "2025-09-05T01:12:01.968445Z", "completed_at": "2025-09-05T01:12:01.973275Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009596824645996094, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_project.not_null_avg_price_by_manufacturer_year_year_of_manufacture.72c17215e2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect year_of_manufacture\nfrom \"database\".\"main\".\"avg_price_by_manufacturer_year\"\nwhere year_of_manufacture is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:01.975942Z", "completed_at": "2025-09-05T01:12:01.978458Z"}, {"name": "execute", "started_at": "2025-09-05T01:12:01.978748Z", "completed_at": "2025-09-05T01:12:01.983951Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009504079818725586, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_project.not_null_car_mileage_segments_car_id.9b0807c9bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect car_id\nfrom \"database\".\"main\".\"car_mileage_segments\"\nwhere car_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:01.986865Z", "completed_at": "2025-09-05T01:12:01.989513Z"}, {"name": "execute", "started_at": "2025-09-05T01:12:01.989824Z", "completed_at": "2025-09-05T01:12:01.994289Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008919715881347656, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_project.not_null_car_mileage_segments_mileage_segment.b69540483f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect mileage_segment\nfrom \"database\".\"main\".\"car_mileage_segments\"\nwhere mileage_segment is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:01.996925Z", "completed_at": "2025-09-05T01:12:02.000166Z"}, {"name": "execute", "started_at": "2025-09-05T01:12:02.000463Z", "completed_at": "2025-09-05T01:12:02.006505Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011095046997070312, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_project.not_null_stg_cars_car_id.54cac9a576", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect car_id\nfrom \"database\".\"main\".\"stg_cars\"\nwhere car_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:02.009203Z", "completed_at": "2025-09-05T01:12:02.011675Z"}, {"name": "execute", "started_at": "2025-09-05T01:12:02.011946Z", "completed_at": "2025-09-05T01:12:02.017234Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009483098983764648, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_project.not_null_stg_cars_manufacturer.1be80ac11b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect manufacturer\nfrom \"database\".\"main\".\"stg_cars\"\nwhere manufacturer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:02.019825Z", "completed_at": "2025-09-05T01:12:02.022469Z"}, {"name": "execute", "started_at": "2025-09-05T01:12:02.022746Z", "completed_at": "2025-09-05T01:12:02.028952Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010596036911010742, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_project.not_null_stg_cars_model.9522518c9f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect model\nfrom \"database\".\"main\".\"stg_cars\"\nwhere model is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:02.031797Z", "completed_at": "2025-09-05T01:12:02.035840Z"}, {"name": "execute", "started_at": "2025-09-05T01:12:02.036132Z", "completed_at": "2025-09-05T01:12:02.047580Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017545700073242188, "adapter_response": {"_message": "OK"}, "message": "Got 66 results, configured to fail if != 0", "failures": 66, "unique_id": "test.dbt_project.unique_car_mileage_segments_car_id.9ea2e8bf05", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    car_id as unique_field,\n    count(*) as n_records\n\nfrom \"database\".\"main\".\"car_mileage_segments\"\nwhere car_id is not null\ngroup by car_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2025-09-05T01:12:02.050437Z", "completed_at": "2025-09-05T01:12:02.053526Z"}, {"name": "execute", "started_at": "2025-09-05T01:12:02.053826Z", "completed_at": "2025-09-05T01:12:02.064937Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016180992126464844, "adapter_response": {"_message": "OK"}, "message": "Got 66 results, configured to fail if != 0", "failures": 66, "unique_id": "test.dbt_project.unique_stg_cars_car_id.7544a8f0e9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    car_id as unique_field,\n    count(*) as n_records\n\nfrom \"database\".\"main\".\"stg_cars\"\nwhere car_id is not null\ngroup by car_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 0.3456242084503174, "args": {"require_generic_test_arguments_property": true, "use_colors_file": true, "exclude_resource_types": [], "use_fast_test_edges": false, "require_all_warnings_handled_by_warn_error": false, "require_explicit_package_overrides_for_builtin_materializations": true, "vars": {}, "defer": false, "introspect": true, "version_check": true, "favor_state": false, "use_colors": true, "require_nested_cumulative_type_params": false, "quiet": false, "invocation_command": "dbt test", "partial_parse_file_diff": true, "log_level_file": "debug", "resource_types": [], "show_all_deprecations": false, "log_format": "default", "write_json": true, "indirect_selection": "eager", "state_modified_compare_vars": false, "select": [], "log_level": "info", "project_dir": "D:\\dbt\\csv-duckbd-dbt\\dbt_project", "source_freshness_run_project_hooks": true, "upload_to_artifacts_ingest_api": false, "log_path": "D:\\dbt\\csv-duckbd-dbt\\dbt_project\\logs", "partial_parse": true, "state_modified_compare_more_unrendered_values": false, "macro_debugging": false, "warn_error_options": {"error": [], "warn": [], "silence": []}, "profiles_dir": "D:\\dbt\\csv-duckbd-dbt\\dbt_project", "static_parser": true, "print": true, "send_anonymous_usage_stats": true, "validate_macro_args": false, "printer_width": 80, "log_file_max_bytes": 10485760, "show_resource_report": false, "require_batched_execution_for_custom_microbatch_strategy": false, "log_format_file": "debug", "strict_mode": false, "exclude": [], "which": "test", "skip_nodes_if_on_run_start_fails": false, "populate_cache": true, "require_resource_names_without_spaces": true, "require_yaml_configuration_for_mf_time_spines": false, "cache_selected_only": false}}